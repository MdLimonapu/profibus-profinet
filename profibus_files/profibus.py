# -*- coding: utf-8 -*-
"""profibus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ucg0cM7m8DO3I4IdSS1mQFDr0y_gMYrO
"""

import time

# Simulated PROFIBUS Slave
class PROFIBUSSlave:
    def __init__(self, address):
        self.address = address

    def process_request(self, request_data):
        # Simulated response based on the request
        if request_data == b"Hello, slave!":
            return "Hello, master {}!".format(self.address).encode()
        else:
            return b"Unknown request!"

# Simulated PROFIBUS Master
class PROFIBUSMaster:
    def __init__(self, slaves):
        self.slaves = slaves

    def send_request(self, request_data):
        responses = []
        for slave in self.slaves:
            response = slave.process_request(request_data)
            responses.append(response)
        return responses

# Create PROFIBUS slave devices
slaves = []
for i in range(1, 6):
    slave = PROFIBUSSlave(address=i)
    slaves.append(slave)

# Create a PROFIBUS master device
master_device = PROFIBUSMaster(slaves=slaves)

# Simulate communication
request_data = b"Hello, slave!"
responses = master_device.send_request(request_data)

# Print the responses
for i, response in enumerate(responses):
    print("Response from slave {}: {}".format(i + 1, response.decode()))